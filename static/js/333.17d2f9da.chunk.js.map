{"version":3,"file":"static/js/333.17d2f9da.chunk.js","mappings":"oPAEaA,G,QAAkB,CAC7BC,SAAU,gBACVC,QAAS,IACTC,MAAO,QACPC,SAAU,S,uBC6DZ,EAvDe,WACb,IAAAC,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlDI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GACpCI,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAA/BG,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAA8BJ,EAAAA,EAAAA,WAAS,GAAMK,GAAAT,EAAAA,EAAAA,GAAAQ,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAEpBG,EAAcX,EAAaY,IAAI,UAIrCC,EAAAA,EAAAA,YAAU,WACHF,IAELD,GAAW,IACXI,EAAAA,EAAAA,IAfa,gBAecH,GACxBI,MAAK,SAAAC,GACgB,IAAhBA,EAAKC,OACPC,EAAAA,GAAAA,MAAY,mCAEZZ,EAASU,EAAKG,QAElB,IACCC,OAAM,SAAAC,GACLH,EAAAA,GAAAA,MAAYG,EAAMC,QACpB,IACCC,SAAQ,kBAAMb,GAAW,EAAM,IACpC,GAAG,CAACC,IAoBJ,OACEa,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAS,CAACC,kBApBW,SAAAC,GACxB,IAAMC,EAAcD,EAAME,OAAOC,cAAcC,MAAM,KAAKC,KAAK,KAE/D,GAAoB,KAAhBJ,EAIF,OAHA9B,EAAgB,CAAC,GACjBK,EAAS,SACT8B,EAAAA,OAAAA,KAAY,8BAA+B7C,GAIzCwC,IAAgBpB,GAIpBV,EAAgB,CAAEoC,MAAON,IACzBzB,EAAS,KAJP8B,EAAAA,OAAAA,KAAY,6BAA8B7C,EAK9C,EAIqDuC,MAAOnB,IAEvDF,IAAWkB,EAAAA,EAAAA,KAACW,EAAAA,GAAM,KACnBX,EAAAA,EAAAA,KAACY,EAAAA,GAAU,CAAClC,MAAOA,MAGzB,C","sources":["services/showError.js","pages/Movies.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nexport const paramsForNotify = {\n  position: 'center-center',\n  timeout: 3000,\n  width: '400px',\n  fontSize: '24px',\n};\n\nexport function onFetchError() {\n  Notify.failure(\n    'Oops! Something went wrong! Try reloading the page or make another choice!',\n\n    paramsForNotify\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Loader, MoviesList, SearchBar } from '../components';\nimport { Notify } from 'notiflix';\nimport { fetchSearchMovie } from '../services/api';\nimport { paramsForNotify } from 'services/showError';\nimport { toast } from 'react-toastify';\n\n// import { useSearchParams, useState, useLocation, Link } from 'react-router-dom';\n\nconst endPoint = '/search/movie';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [films, setFilms] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const searchQuery = searchParams.get('query');\n\n  // const location = useLocation();\n\n  useEffect(() => {\n    if (!searchQuery) return;\n\n    setLoading(true);\n    fetchSearchMovie(endPoint, searchQuery)\n      .then(data => {\n        if (data.length === 0) {\n          toast.error('No movies found for your query!');\n        } else {\n          setFilms(data.results);\n        }\n      })\n      .catch(error => {\n        toast.error(error.message);\n      })\n      .finally(() => setLoading(false));\n  }, [searchQuery]);\n\n  const onSubmitSearchBar = value => {\n    const searchValue = value.trim().toLowerCase().split(' ').join('+');\n\n    if (searchValue === '') {\n      setSearchParams({});\n      setFilms([]);\n      Notify.info('Enter your request, please!', paramsForNotify);\n      return;\n    }\n\n    if (searchValue === searchQuery) {\n      Notify.info('Enter new request, please!', paramsForNotify);\n      return;\n    }\n    setSearchParams({ query: searchValue });\n    setFilms([]);\n  };\n\n  return (\n    <>\n      <SearchBar onSubmitSearchBar={onSubmitSearchBar} value={searchQuery} />\n\n      {loading && <Loader />}\n      <MoviesList films={films} />\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["paramsForNotify","position","timeout","width","fontSize","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","_useState","useState","_useState2","films","setFilms","_useState3","_useState4","loading","setLoading","searchQuery","get","useEffect","fetchSearchMovie","then","data","length","toast","results","catch","error","message","finally","_jsxs","_Fragment","children","_jsx","SearchBar","onSubmitSearchBar","value","searchValue","trim","toLowerCase","split","join","Notify","query","Loader","MoviesList"],"sourceRoot":""}