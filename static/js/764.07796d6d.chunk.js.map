{"version":3,"file":"static/js/764.07796d6d.chunk.js","mappings":"gNAsDA,UA5Ce,WACb,IAAAA,GAA8BC,EAAAA,EAAAA,WAAS,GAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,GAA0BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GA0BtB,OAjBAG,EAAAA,EAAAA,YAAU,WACJF,EAAMG,OAAS,IAGnBC,EAAAA,EAAAA,GAjBa,gBAkBVC,MAAK,SAAAC,GACJL,EAASK,EAAKC,QAChB,IACCC,MAAMC,EAAAA,GACNC,SAAQ,kBAAMb,GAAW,EAAM,GACpC,GAAG,CAACG,KAQFW,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,GACD,KAKAJ,EAAAA,EAAAA,MAACK,EAAAA,GAAY,CAAAH,SAAA,CACVjB,IAAWkB,EAAAA,EAAAA,KAACG,EAAAA,GAAM,KACnBH,EAAAA,EAAAA,KAACI,EAAAA,GAAU,CAAClB,MAAOA,SAI3B,C,qHClDMmB,EAAM,mCACNC,EAAM,gCAECC,EAAkB,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAMC,GAAQ,IAAAC,EAAAC,EAAA,OAAAJ,IAAAA,MAAA,SAAAK,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACF,OAAtCJ,EAAG,GAAAK,OAAMZ,GAAGY,OAAGN,EAAQ,aAAAM,OAAYb,GAAGU,EAAAE,KAAA,EACrBE,EAAAA,EAAAA,IAAUN,GAAK,KAAD,EAAvB,OAARC,EAAQC,EAAAK,KAAAL,EAAAM,OAAA,SACPP,EAAStB,MAAI,wBAAAuB,EAAAO,OAAA,GAAAX,EAAA,KACrB,gBAJ8BY,GAAA,OAAAf,EAAAgB,MAAA,KAAAC,UAAA,KAMlBnC,EAAe,eAAAoC,GAAAjB,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAiB,EAAOf,EAAUgB,GAAK,IAAAf,EAAAC,EAAA,OAAAJ,IAAAA,MAAA,SAAAmB,GAAA,cAAAA,EAAAb,KAAAa,EAAAZ,MAAA,OACQ,OAArDJ,EAAG,GAAAK,OAAMZ,GAAGY,OAAGN,EAAQ,aAAAM,OAAYb,EAAG,WAAAa,OAAUU,GAAKC,EAAAZ,KAAA,EACpCE,EAAAA,EAAAA,IAAUN,GAAK,KAAD,EAAvB,OAARC,EAAQe,EAAAT,KAAAS,EAAAR,OAAA,SACPP,EAAStB,MAAI,wBAAAqC,EAAAP,OAAA,GAAAK,EAAA,KACrB,gBAJ2BG,EAAAC,GAAA,OAAAL,EAAAF,MAAA,KAAAC,UAAA,I,mECTrB,SAAS9B,IACdqC,EAAAA,OAAAA,QACE,6EACA,CACEC,SAAU,gBACVC,QAAS,IACTC,MAAO,QACPC,SAAU,QAGhB,C","sources":["pages/Movies.js","services/api.js","services/showError.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Loader, MoviesList, SearchBar } from '../components';\nimport { fetchSearchFilm } from '../services/api';\nimport { onFetchError } from 'services/showError';\nimport { SectionStyle } from './Pages.styled';\n\n// import { useSearchParams, useState, useLocation, Link } from 'react-router-dom';\n\nconst endPoint = 'search/movie';\n\nconst Movies = () => {\n  const [loading, setLoading] = useState(true);\n  const [films, setFilms] = useState([]);\n\n  // const [searchParams, setSearchParams] = useSearchParams();\n  // const [searchedFilm, setSearchFilm] = useState(null);\n\n  // const queryFilm = searchParams.get('query');\n\n  // const locatioon = useLocation();\n\n  useEffect(() => {\n    if (films.length > 0) {\n      return;\n    }\n    fetchSearchFilm(endPoint)\n      .then(data => {\n        setFilms(data.results);\n      })\n      .catch(onFetchError)\n      .finally(() => setLoading(false));\n  }, [films]);\n  // const onFormSubmit = e => {\n  //   e.preventDefault();\n  //   const value = e.currentTarget.elements.search.value;\n  //   setSearchParams({ query: value });\n  // };\n\n  return (\n    <>\n      <SearchBar\n      //onSubmit={onFormSubmit}\n      />\n      {/* <Link state={{ from: locatioon }} \n      //key={} to={``} \n      /> */}\n      <SectionStyle>\n        {loading && <Loader />}\n        <MoviesList films={films} />\n      </SectionStyle>\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst KEY = '7717fd5330fce9326df9ad18aa597ac1';\nconst URL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendingFilms = async endPoint => {\n  const url = `${URL}${endPoint}?api_key=${KEY}`;\n  const response = await axios.get(url);\n  return response.data;\n};\n\nexport const fetchSearchFilm = async (endPoint, query) => {\n  const url = `${URL}${endPoint}?api_key=${KEY}&query=${query}`;\n  const response = await axios.get(url);\n  return response.data;\n};\n","import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nexport function onFetchError() {\n  Notify.failure(\n    'Oops! Something went wrong! Try reloading the page or make another choice!',\n    {\n      position: 'center-center',\n      timeout: 3000,\n      width: '400px',\n      fontSize: '24px',\n    }\n  );\n}\n"],"names":["_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","films","setFilms","useEffect","length","fetchSearchFilm","then","data","results","catch","onFetchError","finally","_jsxs","_Fragment","children","_jsx","SearchBar","SectionStyle","Loader","MoviesList","KEY","URL","fetchTrendingFilms","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","endPoint","url","response","_context","prev","next","concat","axios","sent","abrupt","stop","_x","apply","arguments","_ref2","_callee2","query","_context2","_x2","_x3","Notify","position","timeout","width","fontSize"],"sourceRoot":""}